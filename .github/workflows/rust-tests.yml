name: Rust Tests

on:
  push:
    branches: [ "main", "release" ]
  pull_request:
    branches: [ "main" ]
  pull_request_target:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: |
      (github.event_name == 'push') ||
      (github.event_name == 'pull_request') ||
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    strategy:
      matrix:
        os: [macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.2.2
      with:
        ref: ${{ github.event_name == 'pull_request_target' && github.event.pull_request.head.sha || github.sha }}
        fetch-depth: 0
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        cache: true
    
    - name: Install system dependencies (macOS)
      run: |
        # macOS dependencies if needed
        echo "macOS runner setup complete"

    - name: Build
      run: cargo build --verbose

    - name: Run Tests
      run: cargo test --verbose --all-features 