name: Rust Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest-4-cores, macos-latest]
    
    steps:
    - uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 0
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        cache: true
        rustflags: "-D warnings"
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest-4-cores'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # macOS dependencies if needed
        echo "macOS runner setup complete"

    - name: Build
      run: cargo build --verbose

    - name: Run Tests
      run: cargo test --verbose --all-features
  
  lint:
    name: Lint
    runs-on: ubuntu-latest-4-cores
    steps:
    - uses: actions/checkout@v4.2.2
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        components: rustfmt, clippy
        cache: true
        rustflags: "-D warnings"
      
    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Lint with Clippy
      run: cargo clippy --all-features --all-targets -- -D warnings
  
  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest-4-cores
    steps:
    - uses: actions/checkout@v4.2.2
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        cache: true

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate coverage report
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload coverage report
      uses: codecov/codecov-action@v5.4.3
      with:
        files: ./cobertura.xml
        flags: unittests
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest-4-cores
    steps:
    - uses: actions/checkout@v4.2.2
    
    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: stable
        cache: true

    - name: Run security audit
      run: |
        cargo install cargo-audit
        cargo audit

  check-msrv:
    name: Check MSRV
    runs-on: ubuntu-latest-4-cores
    steps:
    - uses: actions/checkout@v4.2.2
    
    - name: Set up Rust (MSRV)
      uses: actions-rust-lang/setup-rust-toolchain@v1.12.0
      with:
        toolchain: 1.70.0  # Minimum supported Rust version
        cache: true

    - name: Check compilation with MSRV
      run: cargo check --all-features 